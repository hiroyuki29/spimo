// Mocks generated by Mockito 5.4.0 from annotations
// in spimo/test/memo_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:spimo/features/memos/domain/model/memo.dart' as _i5;
import 'package:spimo/features/memos/domain/model/memo_length_stock.dart'
    as _i4;
import 'package:spimo/features/memos/domain/repository/memo_storage_repository.dart'
    as _i2;
import 'package:spimo/features/summary/domain/model/summary.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MemoStorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemoStorageRepository extends _i1.Mock
    implements _i2.MemoStorageRepository {
  @override
  _i3.Future<List<_i4.MemoLengthStock>> fetchAllMemos(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAllMemos,
          [userId],
        ),
        returnValue: _i3.Future<List<_i4.MemoLengthStock>>.value(
            <_i4.MemoLengthStock>[]),
        returnValueForMissingStub: _i3.Future<List<_i4.MemoLengthStock>>.value(
            <_i4.MemoLengthStock>[]),
      ) as _i3.Future<List<_i4.MemoLengthStock>>);
  @override
  _i3.Future<List<_i5.Memo>> fetchBookMemos({
    required String? userId,
    required String? bookId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBookMemos,
          [],
          {
            #userId: userId,
            #bookId: bookId,
          },
        ),
        returnValue: _i3.Future<List<_i5.Memo>>.value(<_i5.Memo>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.Memo>>.value(<_i5.Memo>[]),
      ) as _i3.Future<List<_i5.Memo>>);
  @override
  _i3.Future<void> addMemo({
    required String? userId,
    required _i5.Memo? memo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMemo,
          [],
          {
            #userId: userId,
            #memo: memo,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> removeMemo({
    required String? userId,
    required _i5.Memo? memo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMemo,
          [],
          {
            #userId: userId,
            #memo: memo,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> stockMemoLength({
    required String? userId,
    required int? addedMemoLength,
    required DateTime? date,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #stockMemoLength,
          [],
          {
            #userId: userId,
            #addedMemoLength: addedMemoLength,
            #date: date,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> addSummary({
    required String? userId,
    required _i6.Summary? summary,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSummary,
          [],
          {
            #userId: userId,
            #summary: summary,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> removeSummary({
    required String? userId,
    required _i6.Summary? summary,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSummary,
          [],
          {
            #userId: userId,
            #summary: summary,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
